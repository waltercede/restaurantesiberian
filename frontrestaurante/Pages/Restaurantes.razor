@page "/restaurantes/{Idciudad:int}/{Title}"
@using System.Net.Http
@using System.Net.Http.Json
@using Data
@inject HttpClient Http
@inject NavigationManager rutaNavegacion
@inject IJSRuntime llamarjs
<h3>@Title</h3>


<table class="table">
    <thead>
        <tr>
            <th>IDRESTAURANTE</th>
            <th>NOMBRE RESTAURANTE</th>
            <th>AFORO PERMITIDO</th>
            <th>TELEFONO</th>
        </tr>
    </thead>

    <tbody>
        @if (respuesta.DatosJson == null || respuesta == null)
        {
            <tr>
                <td><em>Cargando Información...</em></td>
            </tr>
        }

        else
        {
            @foreach (var item in respuesta.DatosJson)
            {
                <tr>
                    <td>@item.Idrestaurante.ToString()</td>
                    <td>@item.NombreRestaurante</td>
                    <td>@item.NumeroAforo.ToString()</td>
                    <td>@item.Telefono</td>
                    <td><a class="btn btn-primary btn-lg active" role="button" href=@($"/editrestaurante/{item.Idrestaurante}/{Idciudad}/{Title}")> Editar</a></td>
                    <td><button class="btn btn-danger btn-lg active" role="button" @onclick="() => eliminarData(item.Idrestaurante)" >Eliminar</button> </td>

                </tr>
            }
        }
    </tbody>

</table>

<div class="row">
    <div class="col-12 text-center">
        <a class="btn btn-success btn-lg active" role="button" href=@($"/addrestaurante/{Idciudad}/{Title}")>AGREGAR RESTAURANTE</a>

    </div>
</div>

@code {
    public string url = "/api/ListaRestaurantexnom/";
    public string url2 = "/api/eliminaRestaurante/";
    public Data.RespuestaModels respuesta = new Data.RespuestaModels();
    RespuestaSimpleModels respuestaSimple = new RespuestaSimpleModels();
    public string Pila { get; set; }

    [Parameter]
    public string Title { get; set; }

    [Parameter]
    public int Idciudad { get; set; }

    protected override async Task OnInitializedAsync()
    {

        if (Pila != Title)
        {
            Pila = Title;
            respuesta = await Http.GetFromJsonAsync<Data.RespuestaModels>(url + Title);
        }
        StateHasChanged();

    }
    protected override async Task OnParametersSetAsync()
    {
        if (Pila != Title)
        {
            Pila = Title;
            respuesta = await Http.GetFromJsonAsync<Data.RespuestaModels>(url + Title);
        }
        StateHasChanged();

    }
    private async Task eliminarData(int idresta)
    {
        var response = await Http.DeleteAsync(url2 + idresta.ToString());
        respuestaSimple = response.Content.ReadFromJsonAsync<RespuestaSimpleModels>().Result;
        if (respuestaSimple.Status == 1)
        {
            rutaNavegacion.NavigateTo($"restaurantes/{Idciudad}/{Title}");
        }
        else
        {
            await llamarjs.InvokeAsync<object>("MostrarAlerta", respuesta.Mensaje);
        }
    }


}
